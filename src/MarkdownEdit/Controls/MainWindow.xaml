<mah:MetroWindow
  x:Class="MarkdownEdit.Controls.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:commands="clr-namespace:MarkdownEdit.Commands"
  xmlns:controls="clr-namespace:MarkdownEdit.Controls"
  xmlns:converters="clr-namespace:MarkdownEdit.Converters"
  xmlns:i18N="clr-namespace:MarkdownEdit.i18n"
  xmlns:interop="clr-namespace:Microsoft.DwayneNeed.Interop;assembly=Microsoft.DwayneNeed"
  xmlns:local="clr-namespace:MarkdownEdit"
  xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
  xmlns:p="clr-namespace:MarkdownEdit.Properties"
  Title="{Binding TitleName}"
  Background="{Binding Path=Theme.EditorBackground, Source={x:Static local:App.UserSettings}}"
  FocusManager.FocusedElement="{Binding ElementName=Editor}"
  GlowBrush="{StaticResource GrayBrush2}"
  IgnoreTaskbarOnMaximize="{Binding Path=IgnoreTaskbarOnMaximize, Source={x:Static local:App.UserSettings}}"
  ResizeMode="CanResizeWithGrip"
  SaveWindowPosition="True"
  TextOptions.TextFormattingMode="Display"
  TitleCaps="False"
  UseLayoutRounding="True"
  WindowButtonCommandsOverlayBehavior="Never"
  WindowTitleBrush="{StaticResource GrayBrush2}"
  WindowTransitionsEnabled="False">

  <mah:MetroWindow.Resources>
    <converters:BooleanToScrollBarVisibilityConverter x:Key="ScrollbarVisibilityConverter" />

    <Style x:Key="CommandWindowButtonStyle" BasedOn="{StaticResource MetroBaseWindowButtonStyle}" TargetType="Button">
      <Setter Property="Margin" Value="7,0,0,0" />
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" Value="{StaticResource TransparentWhiteBrush}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="SpellCheckToggleCommandWindowButtonStyle" BasedOn="{StaticResource CommandWindowButtonStyle}" TargetType="Button">
      <Style.Triggers>
        <!--  Order of triggers matters here  -->
        <DataTrigger Binding="{Binding Path=SpellCheck, ElementName=Editor}" Value="False">
          <Setter Property="Foreground" Value="{StaticResource GrayBrush1}" />
        </DataTrigger>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="WordWrapToggleCommandWindowButtonStyle" BasedOn="{StaticResource CommandWindowButtonStyle}" TargetType="Button">
      <Style.Triggers>
        <!--  Order of triggers matters here  -->
        <DataTrigger Binding="{Binding Path=WordWrap, ElementName=Editor}" Value="False">
          <Setter Property="Foreground" Value="{StaticResource GrayBrush1}" />
        </DataTrigger>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="NewVersionCommandWindowButtonStyle" BasedOn="{StaticResource CommandWindowButtonStyle}" TargetType="Button">
      <Style.Triggers>
        <DataTrigger Binding="{Binding NewVersion}" Value="False">
          <Setter Property="Visibility" Value="Collapsed" />
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="AutoSaveToggleCommandWindowButtonStyle" BasedOn="{StaticResource CommandWindowButtonStyle}" TargetType="Button">
      <Style.Triggers>
        <!--  Order of triggers matters here  -->
        <DataTrigger Binding="{Binding Path=AutoSave, ElementName=Editor}" Value="False">
          <Setter Property="Foreground" Value="{StaticResource GrayBrush1}" />
        </DataTrigger>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="ToolbarSeparator" TargetType="Rectangle">
      <Setter Property="Stroke" Value="White" />
      <Setter Property="Margin" Value="10,0" />
      <Setter Property="Opacity" Value="0.25" />
      <Setter Property="UseLayoutRounding" Value="True" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="Width" Value="1" />
      <Setter Property="Height" Value="15" />
    </Style>
  </mah:MetroWindow.Resources>

  <mah:MetroWindow.RightWindowCommands>
    <mah:WindowCommands ShowLastSeparator="False">
      <StackPanel Margin="20,0" VerticalAlignment="Center" Orientation="Horizontal">
        <Button
          Style="{StaticResource CommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="New"
          Content="&#xe160;"
          ToolTip="{i18N:Localize tooltip-new-command}" />
        <Button
          Style="{StaticResource CommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="Open"
          Content="&#xe1A5;"
          ToolTip="{i18N:Localize tooltip-open-command}" />
        <Button
          Style="{StaticResource CommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="Save"
          Content="&#xe105;"
          ToolTip="{i18N:Localize tooltip-save-command}" />
        <Button
          Style="{StaticResource CommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="SaveAs"
          Content="&#xe28F;"
          ToolTip="{i18N:Localize tooltip-save-as-command}" />
        <Button
          Style="{StaticResource CommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="{x:Static commands:ToggleSettingsFlyoutCommand.Command}"
          Content="&#xe115;"
          ToolTip="{i18N:Localize tooltip-toggle-settings}" />

        <Rectangle Style="{StaticResource ToolbarSeparator}" />
        <Separator />

        <Button
          Style="{StaticResource SpellCheckToggleCommandWindowButtonStyle}"
          FontFamily="Arial"
          Command="{x:Static commands:ToggleDocumentStatistics.Command}"
          Content="{Binding Path=DocumentStatisticDisplayText, ElementName=Preview}"
          ToolTip="{Binding Path=DocumentStatisticsToolTip, ElementName=Preview}" />
        <Button
          Style="{StaticResource SpellCheckToggleCommandWindowButtonStyle}"
          FontFamily="Wingdings"
          Command="{x:Static commands:ToggleSpellCheckCommand.Command}"
          Content="&#xfc;"
          ToolTip="{i18N:Localize tooltip-spell-check}" />
        <Button
          Style="{StaticResource WordWrapToggleCommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="{x:Static commands:ToggleWordWrapCommand.Command}"
          Content="&#x21A9;"
          ToolTip="{i18N:Localize tooltip-word-wrap}" />
        <Button
          Style="{StaticResource AutoSaveToggleCommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="{x:Static commands:ToggleAutoSaveCommand.Command}"
          Content="&#xe105;"
          ToolTip="{i18N:Localize tooltip-auto-save}" />
        <Button
          Style="{StaticResource NewVersionCommandWindowButtonStyle}"
          FontFamily="Segoe UI Symbol"
          Command="{x:Static commands:GoToMarkdownEditWebSiteCommand.Command}"
          Content="&#xE182;"
          ToolTip="{i18N:Localize tooltip-new-version}" />
      </StackPanel>
    </mah:WindowCommands>
  </mah:MetroWindow.RightWindowCommands>

  <mah:MetroWindow.Flyouts>
    <mah:FlyoutsControl>
      <mah:Flyout
        x:Name="SettingsFlyout"
        Width="400"
        AnimateOpacity="True"
        ClosingFinished="SettingsClosingFinished"
        Header="{i18N:Localize settings-flyout-header}"
        IsModal="True"
        Position="Right"
        Theme="Accent">
        <controls:DisplaySettings x:Name="DisplaySettings" SpellCheckProvider="{Binding Path=SpellCheckProvider, RelativeSource={RelativeSource AncestorType=Window}}" />
        <mah:Flyout.InputBindings>
          <KeyBinding Key="Escape" Command="{x:Static commands:ToggleSettingsFlyoutCommand.Command}" />
        </mah:Flyout.InputBindings>
      </mah:Flyout>

      <mah:Flyout
        x:Name="DocumentStructureFlyout"
        Width="400"
        AnimateOpacity="True"
        Header="{i18N:Localize table-of-contents}"
        IsModal="True"
        Position="Right"
        Theme="Accent">
        <controls:DisplayDocumentStructure Margin="10,0,10,10" AbstractSyntaxTree="{Binding ElementName=Editor, Path=AbstractSyntaxTree}" />
        <mah:Flyout.InputBindings>
          <KeyBinding Key="Escape" Command="{x:Static commands:ToggleDocumentStructureFlyoutCommand.Command}" />
        </mah:Flyout.InputBindings>
      </mah:Flyout>
    </mah:FlyoutsControl>
  </mah:MetroWindow.Flyouts>

  <Grid>
    <UniformGrid x:Name="UniformGrid" Columns="2">
      <controls:Editor
        x:Name="Editor"
        Margin="{Binding Path=EditorMargins, RelativeSource={RelativeSource AncestorType=Window}}"
        Padding="5,10,5,3"
        Background="{Binding Path=Theme.EditorBackground, Source={x:Static local:App.UserSettings}}"
        FontFamily="{Binding Path=EditorFontFamily, Source={x:Static local:App.UserSettings}}"
        FontSize="{Binding Path=EditorFontSize, Source={x:Static local:App.UserSettings}}"
        AutoSave="{Binding Path=AutoSave, Source={x:Static p:Settings.Default}}"
        Encoding="{Binding Path=EditorEncoding, Source={x:Static local:App.UserSettings}}"
        HighlightCurrentLine="{Binding Path=EditorHighlightCurrentLine, Source={x:Static local:App.UserSettings}}"
        ShowEndOfLine="{Binding Path=EditorShowEndOfLine, Source={x:Static local:App.UserSettings}}"
        ShowLineNumbers="{Binding Path=EditorShowLineNumbers, Source={x:Static local:App.UserSettings}}"
        ShowSpaces="{Binding Path=EditorShowSpaces, Source={x:Static local:App.UserSettings}}"
        ShowTabs="{Binding Path=EditorShowTabs, Source={x:Static local:App.UserSettings}}"
        SnippetManager="{Binding Path=SnippetManager, RelativeSource={RelativeSource AncestorType=Window}}"
        SpellCheck="{Binding Path=SpellCheckEnabled, Source={x:Static p:Settings.Default}}"
        SpellCheckProvider="{Binding Path=SpellCheckProvider, RelativeSource={RelativeSource AncestorType=Window}}"
        Theme="{Binding Path=Theme, Source={x:Static local:App.UserSettings}}"
        VerticalScrollBarVisibility="{Binding Path=EditorVerticalScrollBarVisible, Source={x:Static local:App.UserSettings}, Converter={StaticResource ScrollbarVisibilityConverter}}"
        WordWrap="{Binding Path=WordWrapEnabled, Source={x:Static p:Settings.Default}}" />

      <interop:AirspaceDecorator
        x:Name="PreviewAirspaceDecorator"
        Background="{Binding Path=Theme.EditorBackground, Source={x:Static local:App.UserSettings}}"
        AirspaceMode="Redirect"
        IsInputRedirectionEnabled="True"
        IsOutputRedirectionEnabled="True">
        <controls:Preview x:Name="Preview" Margin="{Binding EditorMargins}" />
      </interop:AirspaceDecorator>
    </UniformGrid>
  </Grid>

  <Window.InputBindings>
    <KeyBinding Command="{x:Static commands:CloseCommand.Command}" />
    <KeyBinding Command="{x:Static commands:PrintCommand.Command}" />
    <KeyBinding Command="{x:Static commands:NewFileCommand.Command}" />
    <KeyBinding Command="{x:Static commands:OpenFileCommand.Command}" />
    <KeyBinding Command="{x:Static commands:SaveFileCommand.Command}" />
    <KeyBinding Command="{x:Static commands:SaveFileAsCommand.Command}" />
    <KeyBinding Command="{x:Static commands:HelpCommand.Command}" />
    <KeyBinding Command="{x:Static commands:EditorFindCommand.Command}" />
    <KeyBinding Command="{x:Static commands:EditorReplaceDialogCommand.Command}" />
    <KeyBinding Command="{x:Static commands:SaveAsHtmlCommand.Command}" />
    <KeyBinding Command="{x:Static commands:ToggleBoldCommand.Command}" />
    <KeyBinding Command="{x:Static commands:ToggleItalicCommand.Command}" />
    <KeyBinding Command="{x:Static commands:IncreaseFontSizeCommand.Command}" />
    <KeyBinding Command="{x:Static commands:DecreaseFontSizeCommand.Command}" />

    <KeyBinding Command="SaveAs" Gesture="Ctrl+Shift+S" />
    <KeyBinding Command="Print" Gesture="Ctrl+P" />
    <KeyBinding Command="ToggleBold" Gesture="Ctrl+B" />
    <KeyBinding Command="ToggleItalic" Gesture="Ctrl+I" />
    <KeyBinding Command="IncreaseFontSize" Gesture="Ctrl+Plus" />
    <KeyBinding Command="IncreaseFontSize" Gesture="Ctrl+Add" />
    <KeyBinding Command="IncreaseFontSize" Gesture="Ctrl+OemPlus" />
    <KeyBinding Command="DecreaseFontSize" Gesture="Ctrl+Minus" />
    <KeyBinding Command="DecreaseFontSize" Gesture="Ctrl+Subtract" />
    <KeyBinding Command="DecreaseFontSize" Gesture="Ctrl+OemMinus" />

    <KeyBinding Command="{x:Static commands:ToggleCodeCommand.Command}" Gesture="Ctrl+K" />
    <KeyBinding Command="{x:Static commands:ToggleWordWrapCommand.Command}" Gesture="Ctrl+W" />
    <KeyBinding Command="{x:Static commands:InsertHeaderCommand.Command}" CommandParameter="1" Gesture="Ctrl+1" />
    <KeyBinding Command="{x:Static commands:InsertHeaderCommand.Command}" CommandParameter="2" Gesture="Ctrl+2" />
    <KeyBinding Command="{x:Static commands:InsertHeaderCommand.Command}" CommandParameter="3" Gesture="Ctrl+3" />
    <KeyBinding Command="{x:Static commands:InsertHeaderCommand.Command}" CommandParameter="4" Gesture="Ctrl+4" />
    <KeyBinding Command="{x:Static commands:InsertHeaderCommand.Command}" CommandParameter="5" Gesture="Ctrl+5" />
    <KeyBinding Command="{x:Static commands:InsertHeaderCommand.Command}" CommandParameter="6" Gesture="Ctrl+6" />
    <KeyBinding Command="{x:Static commands:RestoreFontSizeCommand.Command}" Gesture="Ctrl+0" />
    <KeyBinding Command="{x:Static commands:RestoreFontSizeCommand.Command}" Gesture="Ctrl+D0" />
    <KeyBinding Command="{x:Static commands:RestoreFontSizeCommand.Command}" Gesture="Ctrl+NumPad0" />
    <KeyBinding Command="{x:Static commands:OpenUserSnippetsCommand.Command}" Gesture="F6" />
    <KeyBinding Command="{x:Static commands:OpenUserDictionaryCommand.Command}" Gesture="F7" />
    <KeyBinding Command="{x:Static commands:ToggleSpellCheckCommand.Command}" Gesture="Ctrl+F7" />
    <KeyBinding Command="{x:Static commands:OpenUserTemplateCommand.Command}" Gesture="F8" />
    <KeyBinding Command="{x:Static commands:OpenUserSettingsCommand.Command}" Gesture="F9" />
    <KeyBinding Command="{x:Static commands:ToggleFullScreenCommand.Command}" Gesture="F11" />
    <KeyBinding Command="{x:Static commands:TogglePreviewCommand.Command}" Gesture="F12" />
    <KeyBinding Command="{x:Static commands:RecentFilesCommand.Command}" Gesture="Ctrl+R" />
    <KeyBinding Command="{x:Static commands:ShowThemeDialogCommand.Command}" Gesture="Ctrl+T" />
    <KeyBinding Command="{x:Static commands:ExportHtmlCommand.Command}" Gesture="Ctrl+E" />
    <KeyBinding Command="{x:Static commands:ExportHtmlTemplateCommand.Command}" Gesture="Ctrl+Shift+E" />
    <KeyBinding Command="{x:Static commands:SaveAsHtmlTemplateCommand.Command}" Gesture="Alt+E" />
    <KeyBinding Command="{x:Static commands:ShowGotoLineDialogCommand.Command}" Gesture="Ctrl+G" />
    <KeyBinding Command="{x:Static commands:ToggleAutoSaveCommand.Command}" Gesture="Alt+S" />
    <KeyBinding Command="{x:Static commands:SelectPreviousHeaderCommand.Command}" Gesture="Ctrl+U" />
    <KeyBinding Command="{x:Static commands:SelectNextHeaderCommand.Command}" Gesture="Ctrl+J" />
    <KeyBinding Command="{x:Static commands:OpenNewInstanceCommand.Command}" Gesture="Ctrl+Shift+N" />
    <KeyBinding Command="{x:Static commands:InsertFileCommand.Command}" Gesture="Ctrl+Shift+O" />
    <KeyBinding Command="{x:Static commands:IncreaseEditorMarginCommand.Command}" Gesture="Alt+Plus" />
    <KeyBinding Command="{x:Static commands:DecreaseEditorMarginCommand.Command}" Gesture="Alt+Minus" />
    <KeyBinding Command="{x:Static commands:ToggleSettingsFlyoutCommand.Command}" Gesture="Ctrl+Comma" />
    <KeyBinding Command="{x:Static commands:ToggleDocumentStructureFlyoutCommand.Command}" Gesture="Ctrl+Period" />
  </Window.InputBindings>
</mah:MetroWindow>